Introduction of DeveOps

Linux

Set of command and practical 

Shell scripting 

Different Modules of shell scripting 

Introduction to GIT hub 

How to operate GIT hub from website 

Commands of GIT hub from command line interface (CLI)

Introduction of Teraform 

Installation and setup of terraform 

Practical of Terraform 

Introduction to Docker 

Installation of Docker 
 
  Practical - Creating containers
            - Pulling images from Docker hub 
            
Concept of Docker file

Creating a docket file 

Project , containerization of Node Js application using docker

Docker compose

Kubernetes Introduction 

Kubernetes architecture 

Minikube setup

creation pods

creation of pods and deployment via yaml

Scaling of the pods 

replica sets 

Introduction of Jenkins

Projects

Ansible 

Lenovo ThinkCentre Neo 30a 24 All-in-One Desktop 2023 New, 23.8" FHD IPS Display, Intel i3-1220P 10-Core, Intel UHD Graphics, 16GB DDR4, 512GB SSD, Wi-Fi, RJ45 LAN, Windows 10 Pro, DSO 32GB USB
Brand: Lenovo
 
$1,159.65




Learning Outcomes Of The DevOps Course:

Learn DSL, Pipeline, and more 8 more concepts of Jenkins.

Hand-on practice over Maven project.

Build concepts of YAML, relocation controller, and 12 more lessons in Kubernetes.

Terraform states, provisioner, capsule project, and many career-building concepts.

Best practices and capsule projects in Terraform.

Docker run, environmental behaviors, compose, and 5 more lessons of expertise.

Fundamentals of Linux and GitHub.

And an additive preparation session for getting you certified!


Touch command - Create a file 
Cat command -  View a file 
Nano command - open an editor 
Cat - conet
ls - list content in a directory 
ls -l ; long list
ls -a ; list hidden files
ls -R : listing of contents 

Directory is folder 


File Directory 

Access level

3 categories 
Owner 
primary groups & others 

Access Mode
r-read (4) - display content 
w=write (2) - To modify contect
x= execute (1) - To execute the file 

User Categories

U- the file owner = rwx (4+2+1=7)
G- other users in the file group =rwx (4+2+1=7)
O- everyone =rwx (4+2+1=7)

Permission of file is = 777

Change Permission 

chmod - to change access modes
Syntax : chmod [mode] filename
chmod -R
  This mode traverse an entire directory tree to change the permission of its files & directory 

cd- chnage directory
cd /home : absolute path
cd .. : To a directory one level up 
cd : To your home directory 
cd - : To your previous working directory 
date - display data and time 

Touch - create empty files or update file time stamps
Mkdir - create a diretory 
rmdir - remotouchve an empty directory 
rm - remove files
 i- interactive
 r- recursive
etc - is where all configuration are stored 

SSH through browser
SSH through Putty
key = .ppk format


18.116.162.225 for putty
ec2-user
pwd-present work directory 

command to zip a file =  gzip
command to unzip a file = gunzipr-userpwd

Blue is directory
white is file

if is colourful is directory
while if it is white it is fileclear

sudo yum install httpd 
sudo systemctl enable httpd
sudo systemctl start httpd
sudo systemctl status httpd

Shell is an intermediator btw kernel & application
Shell scripting is a set of commands to perform a task
All commands are executed sequentially 

Variable in scripts
var_name=value
var_name=$(hostname)
echo $var_name

#!/bin/bash

Mkdir filename
nano filename

#!/bin/bash

for i in {0..20..2}
do
  echo "welcome joseph to devops class $i times"
done

To execute a shell scripting ./filename

$ chmod 777 joseph.sh
[ec2-user@ip-172-31-13-94 ~]$ ./joseph.sh
cat joseph.sh
#!/bin/bash

for i in {0..20..2}
do
  echo "welcome joseph to devops class $i times"
done
[ec2-user@ip-172-31-13-94 ~]$




[ec2-user@ip-172-31-13-94 ~]$ nano john
[ec2-user@ip-172-31-13-94 ~]$ chmod 777 john.sh
chmod: cannot access 'john.sh': No such file or directory
[ec2-user@ip-172-31-13-94 ~]$ chmod 777 john
[ec2-user@ip-172-31-13-94 ~]$ mv john john.sh
[ec2-user@ip-172-31-13-94 ~]$ ls
book  john.sh  joseph.sh
[ec2-user@ip-172-31-13-94 ~]$ chmod 777 john.sh
[ec2-user@ip-172-31-13-94 ~]$ ./john.sh
Hey choose an option

a = To see the current date
b = list all the files in current dir
a
Fri Dec  8 16:15:22 UTC 2023
[ec2-user@ip-172-31-13-94 ~]$ ./john.sh
Hey choose an option

a = To see the current date
b = list all the files in current dir
b
book  john.sh  joseph.sh
[ec2-user@ip-172-31-13-94 ~]$ ./john.sh
Hey choose an option

a = To see the current date
b = list all the files in current dir
c
Not a valid input, please give valid input.
[ec2-user@ip-172-31-13-94 ~]$


echo "Hey! Please enter your age"

read age
if [ "$age" -ge 18 ];

echo "You are eligible to vote."
else
    echo "Sorry! You are not eligible to vote!"
fi


#!/bin/bash

echo "Hey! Please enter your age"

read age
if [ "$age" -ge 18 ];

then
    echo "You are eligible to vote."
else
    echo "Sorry! You are not eligible to vote!"
fi


#!/bin/bash

echo Hey choose an option
echo
echo a = To see the current date
echo b = list all the files in current dir

read choice

case $choice in
     a) date;;
     b) ls;;
     *) echo "Non a valid input"
esac

